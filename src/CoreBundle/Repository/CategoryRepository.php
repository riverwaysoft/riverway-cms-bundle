<?php

namespace Riverway\Cms\CoreBundle\Repository;

use Doctrine\ORM\Query\Expr\Join;
use Riverway\Cms\CoreBundle\Entity\Category;
use Riverway\Cms\CoreBundle\Entity\MenuNode;
use Riverway\Cms\CoreBundle\Enum\CategoryEnum;

/**
 * CategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CategoryRepository extends \Doctrine\ORM\EntityRepository
{
    public function findGrouped(): array
    {
        $query = $this->createQueryBuilder('c')->leftJoin('c.children', 'children')->orderBy('c.name, children.name');
        $list = array();
        foreach ($query->getQuery()->getResult() as $cat) {
            /** @var Category $cat */
            $list[$cat->getName()] = array();

            foreach ($cat->getChildren() as $sub) {
                $list[$cat->getName()][$sub->getId()] = $sub;
            }
        }

        return $list;
    }

    public function findProductCategory(): array
    {
        $query = $this->createQueryBuilder('c')->orderBy('c.name')->andWhere('c.type=:type')->setParameter('type',
            CategoryEnum::PRODUCT);
        $list = array();
        foreach ($query->getQuery()->getResult() as $cat) {
            $list[$cat->getName()] = $cat->getId();
        }
        return $list;
    }

    public function findNotInMenu(MenuNode $menu)
    {
        $qb = $this->createQueryBuilder('c');

        return $qb->leftJoin('c.menu', 'm', Join::WITH, 'c.id=m.category AND m.parentMenu='.$menu->getId())
            ->andWhere('m.id IS NULL')
            ->getQuery()
            ->getResult();
    }
}
